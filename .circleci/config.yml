version: 2
jobs:
  build:
    docker:
      # specify the version here
      - image: circleci/elixir:1.8

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.4

    working_directory: ~/repo
    steps:
      - checkout
      
      # Restore dependency cache
      - restore_cache:
          keys:
            - v3-deps-cache-{{ checksum "mix.lock" }}
            - v3-deps-cache

      # Get and compile hex, rebar, deps
      - run: mix local.hex --force
      - run: mix local.rebar --force
      
      # Ensure compilation happens in correct MIX_ENV for better caching
      - run:
          command: mix deps.get
          environment:
            MIX_ENV: test
      - run:
          command: mix compile
          environment:
            MIX_ENV: test
      
      # Save cache of compiled dependencies
      - save_cache:
          key: v3-deps-cache-{{ checksum "mix.lock" }}
          paths:
            - _build
            - deps
            - ~/.mix
      
      # Create Ecto repo
      - run:
          command: mix ecto.create
          environment:
            MIX_ENV: test
      
      # Setup PLT caching
      - restore_cache:
          keys:
            - v3-plt-cache-{{ checksum "mix.lock" }}
            - v3-plt-cache
      - run: mix dialyzer --plt
      - save_cache:
          key: v3-plt-cache-{{ checksum "mix.lock" }}
          paths:
            - _build
            - ~/.mix
      
      # Run Dialyzer
      - run: mix dialyzer --halt-exit-status

      # Check formatting
      - run: mix format --check-formatted

      # Check style
      - run: mix credo
      
      # Finally run tests
      - run: mix test
